{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoise","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","setCard","turns","setTurns","choiseOne","setChoiseOne","choiseTwo","setChoiseTwo","setDisabled","cards","shuffledCards","sort","Math","random","map","id","useEffect","prevCard","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuBeA,MArBf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAMjD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVC,IAAI,gCACJC,IAAI,YACJC,QAbY,WACbJ,GACHF,EAAaD,YCDbQ,G,MAAa,CACjB,CAAEH,IAAK,2BAA4BI,SAAS,GAC5C,CAAEJ,IAAK,2BAA4BI,SAAS,GAC5C,CAAEJ,IAAK,2BAA4BI,SAAS,GAC5C,CAAEJ,IAAK,2BAA4BI,SAAS,GAC5C,CAAEJ,IAAK,2BAA4BI,SAAS,GAC5C,CAAEJ,IAAK,2BAA4BI,SAAS,KAgF/BC,MA7Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA0BD,mBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,mBAAS,MAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,mBAAS,MAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAgCP,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBgB,EAAjB,KAEMC,EAAQ,WACZ,IAAMC,EAAgB,UAAIb,EAAeA,GACtCc,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAACzB,GAAD,mBAAC,eAAeA,GAAhB,IAAsB0B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAAQS,GACRP,EAAS,IAILb,EAAe,SAACD,GACpBe,EAAYG,EAAalB,GAAQgB,EAAahB,IAIhD2B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUV,MAAQY,EAAUZ,KAC9BO,GAAQ,SAACgB,GACP,OAAOA,EAASH,KAAI,SAACzB,GACnB,OAAIA,EAAKK,MAAQU,EAAUV,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb6B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAGdU,qBAAU,WACNP,MACF,IAGH,IAAMS,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACiB,GAAD,OAAeA,EAAY,KACpCZ,GAAY,IAEd,OACE,sBAAKf,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASa,EAAjB,sBACA,qBAAKhB,UAAU,YAAf,SACGJ,EAAKyB,KAAI,SAACzB,GAAD,OACR,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASe,GAAaf,IAASiB,GAAajB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK0B,SAQhB,uBACA,wCAAU,mBAAGtB,UAAU,QAAb,SAAsBS,WChFtCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49c61a5d.chunk.js","sourcesContent":["import \"../components/SingleCard.css\";\n\nfunction SingleCard({ card, handleChoise, flipped, disabled }) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoise(card);\n    }\n  };\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card-front\" />\n        <img\n          className=\"back\"\n          src=\"/magic-match/image/cover1.jpg\"\n          alt=\"card-back\"\n          onClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SingleCard;\n","import { useState, useEffect } from \"react\";\nimport SingleCard from \"./components/SingleCard\";\nimport \"./App.css\";\n\nconst cardImages = [\n  { src: \"/magic-match/image/1.png\", matched: false },\n  { src: \"/magic-match/image/2.png\", matched: false },\n  { src: \"/magic-match/image/3.png\", matched: false },\n  { src: \"/magic-match/image/4.png\", matched: false },\n  { src: \"/magic-match/image/5.png\", matched: false },\n  { src: \"/magic-match/image/6.png\", matched: false }\n];\n\nfunction App() {\n  const [card, setCard] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiseOne, setChoiseOne] = useState(null);\n  const [choiseTwo, setChoiseTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const cards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n    \n    setChoiseOne(null)\n    setChoiseTwo(null)\n    setCard(shuffledCards);\n    setTurns(0);\n  };\n\n  //Handle click\n  const handleChoise = (card) => {\n    choiseOne ? setChoiseTwo(card) : setChoiseOne(card);\n  };\n\n  //Compare two cards\n  useEffect(() => {\n    if (choiseOne && choiseTwo) {\n      setDisabled(true);\n      if (choiseOne.src === choiseTwo.src) {\n        setCard((prevCard) => {\n          return prevCard.map((card) => {\n            if (card.src === choiseOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiseOne, choiseTwo]);\n\n   //Start game automaticly\n   useEffect(() => {\n       cards()\n   },[])\n   \n  //reset function\n  const resetTurn = () => {\n    setChoiseOne(null);\n    setChoiseTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={cards}>New Game</button>\n      <div className=\"card-grid\">\n        {card.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoise={handleChoise}\n            flipped={card === choiseOne || card === choiseTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <hr></hr>\n      <h4>Turns:<p className='count'>{turns}</p ></h4>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}